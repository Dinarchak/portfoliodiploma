[{"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\index.js":"1","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\App\\App.js":"2","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\MapSection\\MapSection.jsx":"3","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\mock\\sliderCards.js":"4","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\TeamMember\\TeamMember.js":"5","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\mock\\mapMembers.js":"6","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\Team\\Team.jsx":"7","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\Team\\Team.js":"8"},{"size":280,"mtime":1670610377658,"results":"9","hashOfConfig":"10"},{"size":512,"mtime":1670709889193,"results":"11","hashOfConfig":"10"},{"size":2848,"mtime":1670622470590,"results":"12","hashOfConfig":"10"},{"size":2603,"mtime":1670610377660,"results":"13","hashOfConfig":"10"},{"size":911,"mtime":1670708616378,"results":"14","hashOfConfig":"10"},{"size":701,"mtime":1670709214222,"results":"15","hashOfConfig":"10"},{"size":2620,"mtime":1670622495394,"results":"16","hashOfConfig":"10"},{"size":2297,"mtime":1670708616557,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"up5e2k",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":2,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\index.js",[],[],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\App\\App.js",["44","45","46","47","48"],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\MapSection\\MapSection.jsx",["49"],[],"import styles from \"./MapSection.module.css\";\r\nimport { Map, Placemark } from \"@pbe/react-yandex-maps\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { members } from \"../../mock/mapMembers\";\r\n\r\nexport const MapSection = (props) => {\r\n  const [activeMember, setActiveMember] = useState(members[0].id);\r\n\r\n  function click(e, key) {\r\n    if (activeMember === key) return;\r\n    setActiveMember(key);\r\n  }\r\n\r\n  const [map, setMap] = useState();\r\n\r\n  const resizeMap = (map) => {\r\n    if (!map) return;\r\n    map.style.height = (map.offsetWidth * 0.8).toString() + \"px\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    resizeMap(map);\r\n    window.addEventListener(\"resize\", () => resizeMap(map));\r\n  }, [map]);\r\n\r\n  return (\r\n    <section style={{ width: props.width, margin: \"0 auto 0\" }}>\r\n      <div className={styles.title}>\r\n        <h2 className={styles.title__name}>Контактная информация</h2>\r\n        // Button форма обратной связи\r\n      </div>\r\n      <div className={styles.container}>\r\n        <ul className={styles.list}>\r\n          {members.map((m) => (\r\n            <li\r\n              key={m.id}\r\n              onClick={(event) => click(event, m.id)}\r\n              className={styles.listItem}\r\n            >\r\n              <h3 className={styles.listItem__name}>{m.name}</h3>\r\n              <div\r\n                className={`${styles.listItem__address}${\r\n                  m.id === activeMember\r\n                    ? ` ${styles.listItem__address_active}`\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <img\r\n                  className={styles.listItem__icon}\r\n                  src={`./img/${\r\n                    m.id === activeMember\r\n                      ? \"placemarkActive.svg\"\r\n                      : \"placemark.svg\"\r\n                  }`}\r\n                  alt=\"\"\r\n                />\r\n                <div>{m.address.text}</div>\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div style={{ width: \"60%\" }} ref={setMap}>\r\n          <Map\r\n            defaultState={{\r\n              center: [55.751574, 37.573856],\r\n              zoom: 9,\r\n              controls: []\r\n            }}\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n          >\r\n            {members.map((m) => (\r\n              <Placemark\r\n                key={m.id}\r\n                geometry={m.address.geocode}\r\n                options={{\r\n                  iconLayout: \"default#image\",\r\n                  iconImageSize: [50, 50],\r\n                  iconImageHref: `./img/${\r\n                    m.id === activeMember\r\n                      ? \"placemarkActive.svg\"\r\n                      : \"placemark.svg\"\r\n                  }`\r\n                }}\r\n              />\r\n            ))}\r\n          </Map>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\mock\\sliderCards.js",[],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\TeamMember\\TeamMember.js",[],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\mock\\mapMembers.js",[],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\Team\\Team.jsx",["50"],[],"C:\\Users\\Salavat\\Desktop\\portfoliodiploma\\src\\components\\Team\\Team.js",["51"],[],{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":3,"column":9,"nodeType":"54","messageId":"55","endLine":3,"endColumn":19},{"ruleId":"52","severity":1,"message":"57","line":4,"column":9,"nodeType":"54","messageId":"55","endLine":4,"endColumn":14},{"ruleId":"58","severity":2,"message":"59","line":13,"column":34,"nodeType":"60","messageId":"61","endLine":13,"endColumn":38},{"ruleId":"58","severity":2,"message":"62","line":14,"column":45,"nodeType":"60","messageId":"61","endLine":14,"endColumn":53},{"ruleId":"63","severity":1,"message":"64","line":29,"column":70,"nodeType":"65","messageId":"66","endLine":31,"endColumn":7},{"ruleId":"67","severity":1,"message":"68","line":76,"column":5,"nodeType":"69","messageId":"70","endLine":76,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":65,"column":6,"nodeType":"69","messageId":"70","endLine":65,"endColumn":14},"no-unused-vars","'Team' is defined but never used.","Identifier","unusedVar","'MapSection' is defined but never used.","'YMaps' is defined but never used.","react/jsx-no-undef","'Main' is not defined.","JSXIdentifier","undefined","'Projects' is not defined.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","JSXText","putCommentInBraces","no-dupe-keys","Duplicate key 'infinite'.","ObjectExpression","unexpected"]